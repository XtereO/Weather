{"version":3,"sources":["UI/Bricks/TwoBar.tsx","UI/Bricks/SearchBar.tsx","UI/Article/Coordinate/Coordinate.tsx","UI/Article/Coordinate/ContainerCoordinate.tsx"],"names":["TwoBar","props","initialValues","lat","lon","validate","onSubmit","values","submit","handleChange","handleSubmit","className","name","onChange","value","type","SearchBar","React","memo","term","error","maxLength","length","isSubmitting","errors","style","background","border","borderBottom","outline","xmlns","width","height","fill","viewBox","d","Coordinate","news","reverse","slice","findCityByCoordinateThunk","filter","city","findCoordinateCityByNameThunk","CoordinateWithHeader","withHeader","connect","state","mainTheme","coordinate","description","getNews"],"mappings":"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","file":"static/js/4.fd3cafef.chunk.js","sourcesContent":["import { Formik } from \"formik\"\r\n\r\ntype PropsType={\r\n    lat:number\r\n    lon:number\r\n    submit:(lat:number,lon:number)=>void\r\n}\r\n\r\nlet TwoBar:React.FC<PropsType>=(props)=>{\r\n    return<Formik\r\n    initialValues={{lat:props.lat,lon:props.lon}}\r\n    validate={()=>{return {}}}\r\n    onSubmit={(values)=>{\r\n        props.submit(values.lat,values.lon)\r\n    }}>\r\n        {({\r\n            handleChange,\r\n            handleSubmit,\r\n            values\r\n        })=>{\r\n            return<form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5 mb-2 d-flex center\">\r\n                        Lat\r\n                        <div className=\"ml-2\">\r\n                        <input name=\"lat\" onChange={handleChange}\r\n                        value={values.lat}\r\n                        className=\"formInput w-100\" type={\"number\"}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-5 mb-2 d-flex center\">\r\n                        Lon \r\n                        <div className=\"ml-2\">\r\n                        <input name=\"lon\" type={\"number\"} \r\n                        onChange={handleChange} value={values.lon}\r\n                        className=\"formInput w-100\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-2 center\">\r\n                        <button type={\"submit\"} className=\"btn btn-outline-primary\">\r\n                            Search\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        }}\r\n    </Formik>\r\n}\r\n\r\nexport default TwoBar","import { Formik } from \"formik\"\r\nimport React from \"react\"\r\n\r\ntype PropsType={\r\n    term:string,\r\n    submit:(city:string)=>void\r\n}\r\n\r\nlet SearchBar:React.FC<PropsType>=React.memo((props)=>{\r\n    return<Formik\r\n    initialValues={{term:props.term}}\r\n    validate={(values:{term:string})=>{\r\n        const error={\r\n            maxLength:null as null|string\r\n        }\r\n        if(values.term.length>40){\r\n            error.maxLength=\"max length is 40\"\r\n            return error\r\n        }\r\n        return {}\r\n    }}\r\n    onSubmit={(values)=>{\r\n        props.submit(values.term)\r\n    }}\r\n    >\r\n    {({\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        errors,\r\n        values\r\n    })=>{\r\n        return<form onSubmit={handleSubmit}>\r\n            <div className=\"d-flex center\">\r\n                <input name={\"term\"} style={{background:\"transparent\", border: \"none\", \r\n                borderBottom: \"1px solid black\",outline:\"none\"}} onChange={handleChange} \r\n                value={values.term} type={\"search\"} />\r\n                <button type=\"submit\" className=\"btn btn-outline-primary\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\r\n                </svg>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    }}\r\n    </Formik>\r\n})\r\n\r\nexport default SearchBar","import React from \"react\"\r\nimport TwoBar from \"../../Bricks/TwoBar\"\r\nimport SearchBar from \"../../Bricks/SearchBar\"\r\n\r\ntype PropsType={\r\n    mainTheme:string\r\n    description:string\r\n    news:any//jsx elements\r\n    lat:number|null\r\n    lon:number|null\r\n    city:string|null\r\n    filter:{\r\n        city:string | null\r\n        lat:number | null\r\n        lon:number | null\r\n    }\r\n    findCityByCoordinateThunk:(lat:number,lon:number)=>void\r\n    findCoordinateCityByNameThunk:(cityName:string)=>void\r\n}\r\n\r\nlet Coordinate:React.FC<PropsType>=(props)=>{\r\n    return<div className=\"container mt-4\">\r\n        <div>\r\n            <h1>\r\n                Latest Features\r\n            </h1>\r\n            <div className=\"row\">\r\n                {[...props.news].reverse().slice(0,3)}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h1>Find city by coordinates</h1>\r\n            <TwoBar submit={props.findCityByCoordinateThunk}\r\n            lat={props.filter.lat ? props.filter.lat : 0} \r\n            lon={props.filter.lat ? props.filter.lat : 0}/>\r\n            <div className=\"center mt-2\">\r\n                <h2 className=\"text-dark\">{props.city && props.city}</h2>\r\n            </div>\r\n        </div>\r\n        <div className=\"mt-4\">\r\n            <h1>Get coordinates of city</h1>\r\n            <div className=\"\">\r\n            <SearchBar term={props.filter.city ? props.filter.city : \"\"}\r\n            submit={props.findCoordinateCityByNameThunk}/>\r\n            </div>\r\n            <div className=\"center mt-2\">\r\n                {props.lat && <div className=\"row\">\r\n                <div className=\"col-md-6 center\">\r\n                    <h3>lat {props.lat}</h3> \r\n                </div>\r\n                <div className=\"col-md-6 center\">\r\n                    <h3>lon {props.lon}</h3>\r\n                </div>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Coordinate","import { connect } from \"react-redux\";\r\nimport Coordinate from \"./Coordinate\"\r\nimport {NewItem} from \"../../../Types/type\"\r\nimport {AppStateType} from \"../../../Redux/Redux\"\r\nimport getNews from \"../../../Redux/Selectors/getNews\"\r\nimport {findCityByCoordinateThunk,findCoordinateCityByNameThunk} from \"../../../Redux/Reducers/reduceCoordinate\"\r\nimport withHeader from \"../../../HOC/withHeader\"\r\n\r\ntype MSTPType={\r\n    mainTheme:string\r\n    description:string\r\n    news:any//jsx element\r\n    lat:number|null\r\n    lon:number|null\r\n    city:string|null\r\n    filter:{\r\n        city:string | null\r\n        lat:number | null\r\n        lon:number | null\r\n    }\r\n}\r\nlet MapStateToProps=(state:AppStateType)=>{\r\n    return{\r\n        mainTheme:state.coordinate.mainTheme,\r\n        description:state.coordinate.description,\r\n        news:getNews(state.coordinate.news),\r\n        lat:state.coordinate.lat,\r\n        lon:state.coordinate.lon,\r\n        city:state.coordinate.city,\r\n        filter:{\r\n            city:state.coordinate.filter.city,\r\n            lat:state.coordinate.filter.lat,\r\n            lon:state.coordinate.filter.lon\r\n        }\r\n    }\r\n}\r\ntype MDTPType={\r\n    findCityByCoordinateThunk:(lat:number,lon:number)=>void\r\n    findCoordinateCityByNameThunk:(cityName:string)=>void\r\n}\r\ntype OwnPropsType={}\r\n\r\nlet CoordinateWithHeader=withHeader(Coordinate)\r\n\r\nexport default connect<MSTPType,MDTPType,OwnPropsType,AppStateType>(MapStateToProps,{\r\n    findCityByCoordinateThunk,findCoordinateCityByNameThunk\r\n})(CoordinateWithHeader)"],"sourceRoot":""}