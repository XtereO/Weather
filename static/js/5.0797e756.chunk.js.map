{"version":3,"sources":["UI/Article/Coordinate/Coordinate.tsx","UI/Article/Coordinate/ContainerCoordinate.tsx","UI/Header/Trie.js","UI/Header/Debounce.jsx","UI/Header/Header.tsx","HOC/withHeader.js","UI/Bricks/NewFutuare.tsx","Redux/Selectors/getNews.tsx","UI/Bricks/TwoBar.tsx","UI/Bricks/SearchBar.tsx"],"names":["Coordinate","props","className","news","reverse","slice","TwoBar","submit","findCityByCoordinateThunk","lat","filter","lon","city","SearchBar","term","findCoordinateCityByNameThunk","CoordinateWithHeader","withHeader","connect","state","mainTheme","coordinate","description","getNews","Node","value","behavior","this","childs","Trie","root","curNode","length","push","check","key","word","AddNode","AddWord","console","log","RemoveWord","Search","neWord","Support","orig","Mean","Debounce","trie","useState","setTerm","result","setResult","type","placeholder","onChange","e","item","target","toLowerCase","toUpperCase","style","textDecoration","to","Header","indent","i","height","width","borderRadius","src","Component","NewFutuare","img","items","map","initialValues","validate","onSubmit","values","handleChange","handleSubmit","name","React","memo","error","maxLength","isSubmitting","errors","background","border","borderBottom","outline","xmlns","fill","viewBox","d"],"mappings":"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","file":"static/js/5.0797e756.chunk.js","sourcesContent":["import React from \"react\"\r\nimport TwoBar from \"../../Bricks/TwoBar\"\r\nimport SearchBar from \"../../Bricks/SearchBar\"\r\n\r\ntype PropsType={\r\n    mainTheme:string\r\n    description:string\r\n    news:any//jsx elements\r\n    lat:number|null\r\n    lon:number|null\r\n    city:string|null\r\n    filter:{\r\n        city:string | null\r\n        lat:number | null\r\n        lon:number | null\r\n    }\r\n    findCityByCoordinateThunk:(lat:number,lon:number)=>void\r\n    findCoordinateCityByNameThunk:(cityName:string)=>void\r\n}\r\n\r\nlet Coordinate:React.FC<PropsType>=(props)=>{\r\n    return<div className=\"container mt-4\">\r\n        <div>\r\n            <h1>\r\n                Latest Features\r\n            </h1>\r\n            <div className=\"row\">\r\n                {[...props.news].reverse().slice(0,3)}\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <h1>Find city by coordinates</h1>\r\n            <TwoBar submit={props.findCityByCoordinateThunk}\r\n            lat={props.filter.lat ? props.filter.lat : 0} \r\n            lon={props.filter.lat ? props.filter.lat : 0}/>\r\n            <div className=\"center mt-2\">\r\n                <h2 className=\"text-dark\">{props.city && props.city}</h2>\r\n            </div>\r\n        </div>\r\n        <div className=\"mt-4\">\r\n            <h1>Get coordinates of city</h1>\r\n            <div className=\"\">\r\n            <SearchBar term={props.filter.city ? props.filter.city : \"\"}\r\n            submit={props.findCoordinateCityByNameThunk}/>\r\n            </div>\r\n            <div className=\"center mt-2\">\r\n                {props.lat && <div className=\"row\">\r\n                <div className=\"col-md-6 center\">\r\n                    <h3>lat {props.lat}</h3> \r\n                </div>\r\n                <div className=\"col-md-6 center\">\r\n                    <h3>lon {props.lon}</h3>\r\n                </div>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Coordinate","import { connect } from \"react-redux\";\r\nimport Coordinate from \"./Coordinate\"\r\nimport {NewItem} from \"../../../Types/type\"\r\nimport {AppStateType} from \"../../../Redux/Redux\"\r\nimport getNews from \"../../../Redux/Selectors/getNews\"\r\nimport {findCityByCoordinateThunk,findCoordinateCityByNameThunk} from \"../../../Redux/Reducers/reduceCoordinate\"\r\nimport withHeader from \"../../../HOC/withHeader\"\r\n\r\ntype MSTPType={\r\n    mainTheme:string\r\n    description:string\r\n    news:any//jsx element\r\n    lat:number|null\r\n    lon:number|null\r\n    city:string|null\r\n    filter:{\r\n        city:string | null\r\n        lat:number | null\r\n        lon:number | null\r\n    }\r\n}\r\nlet MapStateToProps=(state:AppStateType)=>{\r\n    return{\r\n        mainTheme:state.coordinate.mainTheme,\r\n        description:state.coordinate.description,\r\n        news:getNews(state.coordinate.news),\r\n        lat:state.coordinate.lat,\r\n        lon:state.coordinate.lon,\r\n        city:state.coordinate.city,\r\n        filter:{\r\n            city:state.coordinate.filter.city,\r\n            lat:state.coordinate.filter.lat,\r\n            lon:state.coordinate.filter.lon\r\n        }\r\n    }\r\n}\r\ntype MDTPType={\r\n    findCityByCoordinateThunk:(lat:number,lon:number)=>void\r\n    findCoordinateCityByNameThunk:(cityName:string)=>void\r\n}\r\ntype OwnPropsType={}\r\n\r\nlet CoordinateWithHeader=withHeader(Coordinate)\r\n\r\nexport default connect<MSTPType,MDTPType,OwnPropsType,AppStateType>(MapStateToProps,{\r\n    findCityByCoordinateThunk,findCoordinateCityByNameThunk\r\n})(CoordinateWithHeader)","class Node{\r\n    constructor(value,behavior=0){\r\n        this.value=value\r\n        this.behavior=behavior\r\n        this.childs=[]\r\n    }\r\n}\r\nclass Trie{\r\n    constructor(){\r\n        this.root=new Node(\"\")\r\n    }\r\n    \r\n    AddNode(curNode,value,behavior=0){\r\n        if(curNode.childs.length===0){\r\n            curNode.childs.push(new Node(value,behavior))\r\n            return \"AddSuccessfull\"\r\n        }\r\n        \r\n        //CheckOnCopy\r\n        let check=1\r\n        for(let key in curNode.childs){\r\n            if(curNode.childs[key].value===value){\r\n                check=0\r\n            }\r\n        }\r\n        \r\n        //CheckSuccessfull\r\n        if(check===1){\r\n            curNode.childs.push(new Node(value,behavior))\r\n        }\r\n    }\r\n    AddWord(curNode,word){\r\n        if (word.length===1){\r\n            this.AddNode(curNode,word,1)\r\n            return \"Add Successfull\"\r\n        }\r\n        \r\n        this.AddNode(curNode,word[0])\r\n        \r\n        for (let key in curNode.childs){\r\n            if(curNode.childs[key].value===word[0]){\r\n                this.AddWord(curNode.childs[key],word.slice(1))\r\n            }\r\n        }\r\n    }\r\n    RemoveWord(curNode,word){\r\n      if (word.length===0){\r\n            console.log(curNode)\r\n            curNode.behavior=0\r\n            return \"Remove Successfull\"\r\n        }\r\n        \r\n        for (let key in curNode.childs){\r\n            if(curNode.childs[key].value===word[0]){\r\n                this.RemoveWord(curNode.childs[key],word.slice(1))\r\n            }\r\n        }  \r\n    }\r\n    \r\n    Search(curNode,word){\r\n        for(let key in curNode.childs){\r\n            if(curNode.childs[key].value===word[0]){\r\n                if(curNode.childs[key].behavior===1){\r\n                    return true\r\n                }\r\n                else{\r\n                    return (this.Search(curNode.childs[key],word.slice(1)))\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    \r\n    Support(curNode,word){\r\n        if (curNode.behavior==1){\r\n            console.log(\"Did you mean: \"+word)\r\n            return word\r\n        }\r\n        for(let key in curNode.childs){\r\n            let neWord=word+curNode.childs[key].value\r\n            return this.Support(curNode.childs[key],neWord)\r\n        }\r\n        return false\r\n    }\r\n    Mean(curNode,word,orig=word){\r\n        if ((word.length===1) && (curNode.behavior===1)){\r\n            console.log(\"Did you Mean:\"+orig)\r\n            return true\r\n        }\r\n        if (word.length===0){\r\n            return this.Support(curNode,orig)\r\n        }\r\n        \r\n        for(let key in curNode.childs){\r\n            if(word[0]===curNode.childs[key].value){\r\n                return this.Mean(curNode.childs[key],word.slice(1),orig)\r\n            }\r\n        }\r\n        return false\r\n    }\r\n}\r\n\r\nexport default Trie\r\n","import { useState } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport Trie from \"./Trie\"\r\n\r\nlet Debounce = () => {\r\n\r\n    let trie = new Trie()\r\n    trie.AddWord(trie.root, \"pollution\")\r\n    trie.AddWord(trie.root, \"weather\")\r\n    trie.AddWord(trie.root, \"coordinate\")\r\n    trie.AddWord(trie.root,\"main\")\r\n    trie.AddWord(trie.root,\"news\")\r\n\r\n    let [term, setTerm] = useState(\"\")\r\n    let [result,setResult] = useState()\r\n\r\n    let debounce = (e) => {\r\n        let item;\r\n        if(e.target.value){\r\n            item=trie.Mean(trie.root,e.target.value.toLowerCase())\r\n        }\r\n        if(item){\r\n            setResult(item[0].toUpperCase()+item.slice(1))    \r\n        }else if(!e.target.value){setResult(\"\")}\r\n        else{setResult(\"No such as theme\")}\r\n        setTerm(e.target.value)\r\n    }\r\n\r\n\r\n    return <div className=\"mt-4 mb-1\">\r\n        <div className=\"mb-1\">\r\n            <input type=\"search\" placeholder=\"Search\"\r\n                className=\"w-100 mainInput\" value={term} onChange={debounce}\r\n                />\r\n        </div>\r\n        {result &&\r\n        <div>\r\n            <ul className=\"list-group\">\r\n                <NavLink style={{textDecoration:\"none\"}} to={result}>\r\n                <li className=\"list-group-item bounce\">{result}</li>\r\n                </NavLink>\r\n            </ul>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\nexport default Debounce\r\n\r\n","import React from \"react\"\r\nimport Debounce from \"./Debounce\"\r\n\r\ntype PropsType = {\r\n    mainTheme: string,\r\n    description: string\r\n}\r\n\r\nlet Header: React.FC<PropsType> = (props) => {\r\n    let indent = [] as Array<any>\r\n    for (let i = 0; i < 10; i++) {\r\n        indent.push(<br />)\r\n    }\r\n    return <div className={props.mainTheme + \" container-fluid Header\"}>\r\n        <div className=\"d-flex\">\r\n            <div className=\"\">\r\n                <img className=\"img\"\r\n                    style={{ height: 100, width: 100, borderRadius: 2000 }} src=\"http://китсызрань.рф/wp-content/uploads/2016/12/1-1.jpg\" />\r\n            </div>\r\n            <div className=\"text-light\">\r\n                <h1>{props.mainTheme}</h1>\r\n                <div className=\"ml-2\">{props.description}</div>\r\n            </div>\r\n        </div>\r\n        <div></div>\r\n        <div>\r\n            <Debounce />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Header","import Header from \"../UI/Header/Header\"\r\n\r\n\r\nlet withHeader=(Component)=>{\r\n    return(props)=>{\r\n        return<div>\r\n            <Header mainTheme={props.mainTheme} description={props.description}/>\r\n            <Component {...props} />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withHeader","import { NewItem } from \"../../Types/type\";\r\n\r\nlet NewFutuare:React.FC<NewItem>=(props)=>{\r\n    return<div className=\"col-md-4 px-2 pt-2\">\r\n        <div className=\" card\">\r\n        <div className=\"\">\r\n            <img className=\"img w-100 rounded\" src={props.img} />\r\n        </div>\r\n        <div className=\"card-body\">\r\n            {props.description}\r\n        </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default NewFutuare","import NewFutuare from \"../../UI/Bricks/NewFutuare\"\r\nimport {NewItem} from \"../../Types/type\"\r\n\r\nlet getNews=(items:Array<NewItem>)=>{\r\n    return items.map(e=><NewFutuare description={e.description}\r\n    img={e.img}/>)\r\n}\r\nexport default getNews","import { Formik } from \"formik\"\r\n\r\ntype PropsType={\r\n    lat:number\r\n    lon:number\r\n    submit:(lat:number,lon:number)=>void\r\n}\r\n\r\nlet TwoBar:React.FC<PropsType>=(props)=>{\r\n    return<Formik\r\n    initialValues={{lat:props.lat,lon:props.lon}}\r\n    validate={()=>{return {}}}\r\n    onSubmit={(values)=>{\r\n        props.submit(values.lat,values.lon)\r\n    }}>\r\n        {({\r\n            handleChange,\r\n            handleSubmit,\r\n            values\r\n        })=>{\r\n            return<form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5 mb-2 d-flex center\">\r\n                        Lat\r\n                        <div className=\"ml-2\">\r\n                        <input name=\"lat\" onChange={handleChange}\r\n                        value={values.lat}\r\n                        className=\"formInput w-100\" type={\"number\"}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-5 mb-2 d-flex center\">\r\n                        Lon \r\n                        <div className=\"ml-2\">\r\n                        <input name=\"lon\" type={\"number\"} \r\n                        onChange={handleChange} value={values.lon}\r\n                        className=\"formInput w-100\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-2 center\">\r\n                        <button type={\"submit\"} className=\"btn btn-outline-primary\">\r\n                            Search\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        }}\r\n    </Formik>\r\n}\r\n\r\nexport default TwoBar","import { Formik } from \"formik\"\r\nimport React from \"react\"\r\n\r\ntype PropsType={\r\n    term:string,\r\n    submit:(city:string)=>void\r\n}\r\n\r\nlet SearchBar:React.FC<PropsType>=React.memo((props)=>{\r\n    return<Formik\r\n    initialValues={{term:props.term}}\r\n    validate={(values:{term:string})=>{\r\n        const error={\r\n            maxLength:null as null|string\r\n        }\r\n        if(values.term.length>40){\r\n            error.maxLength=\"max length is 40\"\r\n            return error\r\n        }\r\n        return {}\r\n    }}\r\n    onSubmit={(values)=>{\r\n        props.submit(values.term)\r\n    }}\r\n    >\r\n    {({\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        errors,\r\n        values\r\n    })=>{\r\n        return<form onSubmit={handleSubmit}>\r\n            <div className=\"d-flex center\">\r\n                <input name={\"term\"} style={{background:\"transparent\", border: \"none\", \r\n                borderBottom: \"1px solid black\",outline:\"none\"}} onChange={handleChange} \r\n                value={values.term} type={\"search\"} />\r\n                <button type=\"submit\" className=\"btn btn-outline-primary\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" fill=\"currentColor\" className=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\r\n                </svg>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    }}\r\n    </Formik>\r\n})\r\n\r\nexport default SearchBar"],"sourceRoot":""}