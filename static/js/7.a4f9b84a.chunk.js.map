{"version":3,"sources":["UI/Bricks/TextInput.tsx","UI/Bricks/ToolTip.tsx","UI/Article/Main/Main.tsx","UI/Article/Main/Feedback.tsx","Redux/Selectors/mainSelector.tsx","UI/Article/Main/ContainerMain.ts"],"names":["TextInput","props","className","textHeader","initialValues","text","name","onSubmit","values","setSubmitting","submit","validate","errors","trim","length","handleChange","handleSubmit","touched","isSubmitting","nameError","textError","value","onChange","placeholder","type","TooltipFunc","useState","opacity","top","left","state","setState","toggle","e","TooltipNode","ReactDOM","findDOMNode","target","offsetTop","offsetLeft","style","zIndex","display","onMouseEnter","onMouseOut","children","role","Main","Link","textDecoration","color","fontSize","to","href","Pagination","countButtons","Math","ceil","feedbacks","portionSize","page","changePage","reverse","slice","doFeedback","Feedback","date","getFeedbacks","main","map","f","compose","connect","mainTheme","description","withHeader"],"mappings":"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","file":"static/js/7.a4f9b84a.chunk.js","sourcesContent":["import { error } from \"console\"\r\nimport { Formik } from \"formik\"\r\n\r\ntype PropsType = {\r\n    textHeader: string\r\n    submit: (text: string, name: string) => void\r\n}\r\n\r\nlet TextInput: React.FC<PropsType> = (props) => {\r\n    return <div className=\"card\">\r\n        <div className=\"card-header\">{props.textHeader}</div>\r\n        <div className=\"card-body\">\r\n            <Formik\r\n                initialValues={{ text: \"\", name: \"\" }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    props.submit(values.text, values.name)\r\n                    setSubmitting(true)\r\n                }}\r\n                validate={(values) => {\r\n                    const errors = { text: \"\", name: \"\" }\r\n                    if (values.name.trim().length === 0) {\r\n                        errors.name = \"Name is required\"\r\n                        return errors\r\n                    }\r\n                    if (values.text.trim().length === 0) {\r\n                        errors.text = \"text is required\"\r\n                        return errors\r\n                    }\r\n                    return {}\r\n                }}>\r\n                {({\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    values, touched,\r\n                    errors,isSubmitting\r\n                }) => {\r\n                    let nameError = errors.name && touched.name\r\n                    let textError = errors.text && touched.text\r\n                    return <form onSubmit={handleSubmit}>\r\n                        <div>\r\n                            <input value={values.name} onChange={handleChange}\r\n                                name=\"name\" placeholder={nameError \r\n                                ? errors.name : \"Write here your name\"}\r\n                                className={nameError ? \"form-control is-invalid\" :\r\n                                \"form-control\"} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <textarea name=\"text\" className={textError\r\n                                ? \"form-control is-invalid\" : \"form-control\"}\r\n                                onChange={handleChange} value={values.text}\r\n                                placeholder={textError ?\r\n                                    errors.text : \"Write here your feedback\"} />\r\n                        </div>\r\n                        {isSubmitting ? \r\n                        <div className=\"text-primary center\">\r\n                            <h3>Thanks for feedback</h3>\r\n                        </div> :\r\n                        <div className=\"w-100\">\r\n                            <button type={\"submit\"} className=\"btn btn-outline-primary w-100\">\r\n                                leave feedback\r\n                            </button>\r\n                        </div>}\r\n                    </form>\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default TextInput","import ReactDOM from \"react-dom\"\r\nimport React, { useState } from \"react\"\r\n\r\ntype PropsType={\r\n    text:string\r\n}\r\n\r\nlet TooltipFunc:React.FC<PropsType> = (props) => {\r\n\r\n    let [state, setState] = useState({\r\n        opacity: false,\r\n        top: 0,\r\n        left: 0\r\n    })\r\n\r\n    let toggle = (e:any) => {\r\n        const TooltipNode:any = ReactDOM.findDOMNode(e.target)\r\n        setState({\r\n            opacity: !state.opacity,\r\n            top: TooltipNode.offsetTop+30,\r\n            left: TooltipNode.offsetLeft\r\n        })\r\n    }\r\n    const style = {\r\n        opacity: +state.opacity,\r\n        top: state.top,\r\n        left: state.left,\r\n        zIndex: state.opacity ? 1000 : -1000\r\n    }\r\n    return <div style={{ display: \"inline\" }}>\r\n        <span onMouseEnter={toggle} onMouseOut={toggle}>\r\n            {props.children}\r\n        </span>\r\n        <div style={style} className=\"tooltip bottom mt-1\" role={\"tooltip\"}>\r\n            <div className=\"tooltip-arrow\"></div>\r\n            <div className=\"tooltip-inner\">\r\n                {props.text}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default TooltipFunc\r\n\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport {FeedbackType} from \"../../../Redux/Reducers/reduceMain\"\r\nimport TextInput from \"../../Bricks/TextInput\"\r\nimport Pagination from \"../../Bricks/Pagination\"\r\nimport Tooltip from \"../../Bricks/ToolTip\"\r\n \r\ntype PropsType = {\r\n    mainTheme: string\r\n    description: string\r\n    feedbacks:Array<any>//Array with jsx\r\n    page:number\r\n    portionSize:number\r\n    changePage:(page:number)=>void\r\n    doFeedback:(text:string,name:string)=>void\r\n}\r\n\r\nlet Main: React.FC<PropsType> = (props) => {\r\n    let Link = { textDecoration: \"none\", color: \"blue\" }\r\n    return <div>\r\n        <div className=\"container Header\">\r\n            <div style={{ fontSize: 30 }}>\r\n                <h1>About project</h1>\r\n                <div className=\"container\">\r\n                    Its project was created for\r\n                    geographical dates\r\n        such as <NavLink style={Link} to=\"Pollution\">\r\n                        Pollution\r\n        </NavLink> , <NavLink style={Link} to=\"Weather\">\r\n                        Weather\r\n        </NavLink> forecast , <NavLink style={Link} to=\"Coordinater\">\r\n                        Coordinate\r\n        </NavLink> - and all its arround while the world.\r\n        </div>\r\n            </div>\r\n            <div style={{ fontSize: 30 }}>\r\n                <h1>API</h1>\r\n                <div className=\"container\">\r\n                    All dates was geting\r\n               from API - <a href=\"https://openweathermap.org/\" style={Link}>\r\n                        <Tooltip text={\"Weather API\"}>OpenWeather</Tooltip>\r\n                </a> - Thanks a lot them.\r\n            </div>\r\n            </div>\r\n            <div>\r\n                <h1>And other information</h1>\r\n                <div className=\"container\" style={{ fontSize: 30 }}>\r\n                    Maket this project\r\n                    and idea was\r\n                taken from site - <a href=\"https://www.noaa.gov/\" style={Link}>\r\n                        <Tooltip text={\"Company of Explorers\"}>NOAA</Tooltip>\r\n                </a> - Thanks a lot them.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\">\r\n            <h1>Feedbacks\r\n                <div style={{fontSize:28}} className=\"right\">\r\n                    <Pagination countButtons={Math.ceil(props.feedbacks.length/props.portionSize)}\r\n                    portionSize={props.portionSize}  \r\n                    page={props.page} changePage={props.changePage}/>\r\n                </div>\r\n            </h1>\r\n            <div className=\"container\">\r\n                {[...[...props.feedbacks].reverse()].slice\r\n                ((props.page-1)*props.portionSize,props.page*props.portionSize)}\r\n                <div className=\"mt-2\">\r\n                    <TextInput textHeader={\"Leave feedback\"}\r\n                    submit={props.doFeedback} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Main","import React from \"react\"\r\ntype PropsType={\r\n    text:string\r\n    name:string\r\n    date:string\r\n}\r\n\r\nlet Feedback:React.FC<PropsType>=(props)=>{\r\n    return<div className=\"card mt-2\">\r\n        <div className=\"card-header\">\r\n            {props.name}\r\n            <div className=\"right\">\r\n                {props.date}\r\n            </div>\r\n        </div>\r\n        <div className=\"card-body card-container\">\r\n            {props.text}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Feedback","import {AppStateType} from \"../Redux\"\r\nimport Feedback from \"../../UI/Article/Main/Feedback\"\r\n\r\nexport let getFeedbacks=(state:AppStateType)=>{\r\n    return state.main.feedbacks.map(f=>\r\n    <Feedback name={f.name} text={f.text} date={f.date}  />)\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport withHeader from \"../../../HOC/withHeader\"\r\nimport {AppStateType} from \"../../../Redux/Redux\"\r\nimport Main from \"./Main\"\r\nimport {doFeedback, changePage,FeedbackType} from \"../../../Redux/Reducers/reduceMain\"\r\nimport {getFeedbacks} from \"../../../Redux/Selectors/mainSelector\"\r\n\r\ntype MSTPType={\r\n    mainTheme:string,\r\n    description:string,\r\n    feedbacks:any//array with jsx\r\n    page:number\r\n    portionSize:number\r\n}\r\nlet MapStateToProps=(state:AppStateType):MSTPType=>{\r\n    return{\r\n        mainTheme:state.main.mainTheme,\r\n        description:state.main.description,\r\n        feedbacks:getFeedbacks(state),\r\n        page:state.main.page,\r\n        portionSize:state.main.portionSize\r\n    }\r\n}\r\ntype MDTPType={\r\n    doFeedback:(text:string,name:string)=>void\r\n    changePage:(page:number)=>void\r\n}\r\ntype OwnPropsType={}\r\n\r\nexport default compose(\r\n    connect<MSTPType,MDTPType,OwnPropsType,AppStateType>\r\n    (MapStateToProps,{doFeedback,changePage}),\r\n    withHeader\r\n)(Main)"],"sourceRoot":""}