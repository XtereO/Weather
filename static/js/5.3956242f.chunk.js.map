{"version":3,"sources":["UI/Article/Pollution/Pollution.tsx","UI/Article/Pollution/ContainerPollution.ts","UI/Bricks/TwoBar.tsx"],"names":["Pollution","props","pollutionItems","components","map","p","name","k","className","news","TwoBar","submit","setPollutionThunk","lat","filter","lon","aqi","compose","connect","state","mainTheme","pollution","description","getNews","co","no","no2","o3","so2","pm2_5","pm10","nh3","withHeader","initialValues","validate","onSubmit","values","handleChange","handleSubmit","onChange","value","type"],"mappings":"6KA4DeA,EA1CmB,SAACC,GAE/B,IAAIC,EAAeD,EAAME,WAAWC,KAAI,SAAAC,GAAC,OACrC,+BACI,6BACKA,EAAEC,OAEP,6BACKD,EAAEE,MALFF,EAAEC,SASf,OAAM,sBAAKE,UAAU,iBAAf,UACF,0CACA,8BACKP,EAAMQ,OAEX,oBAAID,UAAU,OAAd,8CACA,cAACE,EAAA,EAAD,CAAQC,OAAQV,EAAMW,kBACtBC,IAAKZ,EAAMa,OAAOD,IAAMZ,EAAMa,OAAOD,IAAM,EAC3CE,IAAKd,EAAMa,OAAOC,IAAMd,EAAMa,OAAOC,IAAM,IAE3C,wBAAOP,UAAU,sBAAjB,UACI,kCACI,yCACA,8CAEJ,gCACKN,OAGRD,EAAMe,IACP,qBAAKR,UAAU,QAAf,SAAuB,6DACS,EAAEP,EAAMe,SAExC,qBAAKR,UAAU,QAAf,SAAuB,wECFhBS,sBACbC,aA5BkB,SAACC,GACjB,MAAM,CACNC,UAAUD,EAAME,UAAUD,UAC1BE,YAAYH,EAAME,UAAUC,YAC5Bb,KAAKc,YAAQJ,EAAME,UAAUZ,MAC7BO,IAAIG,EAAME,UAAUL,IACpBb,WAAW,CACP,CAACG,KAAK,KAAKC,EAAEY,EAAME,UAAUlB,WAAWqB,IACxC,CAAClB,KAAK,KAAKC,EAAEY,EAAME,UAAUlB,WAAWsB,IACxC,CAACnB,KAAK,MAAMC,EAAEY,EAAME,UAAUlB,WAAWuB,KACzC,CAACpB,KAAK,KAAKC,EAAEY,EAAME,UAAUlB,WAAWwB,IACxC,CAACrB,KAAK,MAAMC,EAAEY,EAAME,UAAUlB,WAAWyB,KACzC,CAACtB,KAAK,QAAQC,EAAEY,EAAME,UAAUlB,WAAW0B,OAC3C,CAACvB,KAAK,OAAOC,EAAEY,EAAME,UAAUlB,WAAW2B,MAC1C,CAACxB,KAAK,MAAMC,EAAEY,EAAME,UAAUlB,WAAW4B,MAE7CjB,OAAO,CACHD,IAAIM,EAAME,UAAUP,OAAOD,IAC3BE,IAAII,EAAME,UAAUP,OAAOC,QAWhB,CAACH,wBAClBoB,IAHaf,CAIbjB,I,gCCvDF,mBAiDeU,IAzCgB,SAACT,GAC5B,OAAM,cAAC,IAAD,CACNgC,cAAe,CAACpB,IAAIZ,EAAMY,IAAIE,IAAId,EAAMc,KACxCmB,SAAU,WAAK,MAAO,IACtBC,SAAU,SAACC,GACPnC,EAAMU,OAAOyB,EAAOvB,IAAIuB,EAAOrB,MAJ7B,SAMD,YAII,IAHDsB,EAGA,EAHAA,aACAC,EAEA,EAFAA,aACAF,EACA,EADAA,OAEA,OAAM,sBAAMD,SAAUG,EAAhB,SACF,sBAAK9B,UAAU,MAAf,UACI,sBAAKA,UAAU,8BAAf,gBAEI,qBAAKA,UAAU,OAAf,SACA,uBAAOF,KAAK,MAAMiC,SAAUF,EAC5BG,MAAOJ,EAAOvB,IACdL,UAAU,kBAAkBiC,KAAM,gBAGtC,sBAAKjC,UAAU,8BAAf,gBAEI,qBAAKA,UAAU,OAAf,SACA,uBAAOF,KAAK,MAAMmC,KAAM,SACxBF,SAAUF,EAAcG,MAAOJ,EAAOrB,IACtCP,UAAU,yBAGd,qBAAKA,UAAU,kBAAf,SACI,wBAAQiC,KAAM,SAAUjC,UAAU,0BAAlC","file":"static/js/5.3956242f.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { setPollutionThunk } from \"../../../Redux/Reducers/reducePollution\"\r\nimport TwoBar from \"../../Bricks/TwoBar\"\r\nimport {HimItem} from \"./ContainerPollution\"\r\n\r\ntype PropsType={\r\n    mainTheme:string\r\n    description:string\r\n    news:any//object with jsx\r\n    aqi:number|null//Where 1=Good,2=Fair,3=Moderate,4=Poor,5=VeryPoor\r\n    components:Array<HimItem>\r\n    filter:{\r\n        lat:number | null\r\n        lon:number | null\r\n    }\r\n    setPollutionThunk:(lat:number,lon:number)=>void\r\n}\r\n\r\nlet Pollution:React.FC<PropsType>=(props)=>{\r\n    \r\n    let pollutionItems=props.components.map(p=>\r\n        <tr key={p.name}>\r\n            <td>\r\n                {p.name}\r\n            </td>\r\n            <td>\r\n                {p.k}\r\n            </td>\r\n        </tr>)\r\n\r\n    return<div className=\"container mt-4\">\r\n        <h1>Features</h1>\r\n        <div>\r\n            {props.news}\r\n        </div>\r\n        <h1 className=\"mt-4\">Find out pollution on coordinate</h1>\r\n        <TwoBar submit={props.setPollutionThunk}\r\n        lat={props.filter.lat ? props.filter.lat : 0} \r\n        lon={props.filter.lon ? props.filter.lon : 0} />\r\n         \r\n        <table className=\"table table-primary\">\r\n            <thead>\r\n                <th>Element</th>\r\n                <th>Koeficent</th>\r\n            </thead>\r\n            <tbody>\r\n                {pollutionItems}\r\n            </tbody>\r\n        </table>\r\n        {props.aqi ?\r\n        <div className=\"right\"><h2>\r\n            Average rating pollution - {6-props.aqi}\r\n        </h2></div>:\r\n        <div className=\"right\"><h3>\r\n            *Enter lat and lon to get analys\r\n        </h3></div>\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Pollution","import { any } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport { AppStateType } from \"../../../Redux/Redux\";\r\nimport getNews from \"../../../Redux/Selectors/getNews\"\r\nimport {setPollutionThunk} from \"../../../Redux/Reducers/reducePollution\"\r\nimport withHeader from \"../../../HOC/withHeader\"\r\nimport Pollution from \"./Pollution\"\r\n\r\nexport type HimItem={\r\n    name:string | null\r\n    k:number | null //koeficent\r\n}\r\ntype MSTPType={\r\n    mainTheme:string\r\n    description:string\r\n    news:any//object with jsx\r\n    aqi:number|null//Where 1=Good,2=Fair,3=Moderate,4=Poor,5=VeryPoor\r\n    components:Array<HimItem>\r\n    filter:{\r\n        lat:number | null\r\n        lon:number | null\r\n    }\r\n}\r\nlet MapStateToProps=(state:AppStateType):MSTPType=>{\r\n    return{\r\n    mainTheme:state.pollution.mainTheme,\r\n    description:state.pollution.description,\r\n    news:getNews(state.pollution.news),\r\n    aqi:state.pollution.aqi,//Where 1=Good,2=Fair,3=Moderate,4=Poor,5=VeryPoor\r\n    components:[\r\n        {name:\"co\",k:state.pollution.components.co},\r\n        {name:\"no\",k:state.pollution.components.no},\r\n        {name:\"no2\",k:state.pollution.components.no2},\r\n        {name:\"o3\",k:state.pollution.components.o3},\r\n        {name:\"so2\",k:state.pollution.components.so2},\r\n        {name:\"pm2_5\",k:state.pollution.components.pm2_5},\r\n        {name:\"pm10\",k:state.pollution.components.pm10},\r\n        {name:\"nh3\",k:state.pollution.components.nh3}\r\n    ]as Array<HimItem>,\r\n    filter:{\r\n        lat:state.pollution.filter.lat,\r\n        lon:state.pollution.filter.lon\r\n    }\r\n    }\r\n}\r\ntype MDTPType={\r\n    setPollutionThunk:(lat:number,lon:number)=>void\r\n}\r\ntype OwnPropsType={}\r\n\r\nexport default compose(\r\n  connect<MSTPType,MDTPType,OwnPropsType,AppStateType>\r\n  (MapStateToProps,{setPollutionThunk}),\r\n  withHeader  \r\n)(Pollution)","import { Formik } from \"formik\"\r\n\r\ntype PropsType={\r\n    lat:number\r\n    lon:number\r\n    submit:(lat:number,lon:number)=>void\r\n}\r\n\r\nlet TwoBar:React.FC<PropsType>=(props)=>{\r\n    return<Formik\r\n    initialValues={{lat:props.lat,lon:props.lon}}\r\n    validate={()=>{return {}}}\r\n    onSubmit={(values)=>{\r\n        props.submit(values.lat,values.lon)\r\n    }}>\r\n        {({\r\n            handleChange,\r\n            handleSubmit,\r\n            values\r\n        })=>{\r\n            return<form onSubmit={handleSubmit}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-5 mb-2 d-flex center\">\r\n                        Lat\r\n                        <div className=\"ml-2\">\r\n                        <input name=\"lat\" onChange={handleChange}\r\n                        value={values.lat}\r\n                        className=\"formInput w-100\" type={\"number\"}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-5 mb-2 d-flex center\">\r\n                        Lon \r\n                        <div className=\"ml-2\">\r\n                        <input name=\"lon\" type={\"number\"} \r\n                        onChange={handleChange} value={values.lon}\r\n                        className=\"formInput w-100\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-2 center\">\r\n                        <button type={\"submit\"} className=\"btn btn-outline-primary\">\r\n                            Search\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        }}\r\n    </Formik>\r\n}\r\n\r\nexport default TwoBar"],"sourceRoot":""}