{"version":3,"sources":["UI/Header/Trie.js","UI/Header/Debounce.jsx","UI/Header/Header.tsx","HOC/withHeader.js","UI/Bricks/Pagination.tsx","UI/Bricks/TextInput.tsx","UI/Bricks/ToolTip.tsx","UI/Article/Main/Main.tsx","UI/Article/Main/Feedback.tsx","Redux/Selectors/mainSelector.tsx","UI/Article/Main/ContainerMain.ts"],"names":["Node","value","behavior","this","childs","Trie","root","curNode","length","push","check","key","word","AddNode","AddWord","slice","console","log","RemoveWord","Search","neWord","Support","orig","Mean","Debounce","trie","useState","term","setTerm","result","setResult","className","type","placeholder","onChange","e","item","target","toLowerCase","toUpperCase","style","textDecoration","to","Header","props","indent","i","mainTheme","height","width","borderRadius","src","description","withHeader","Component","Pagination","portionNumber","setPortionNumber","changePage","id","buttons","countButtons","page","onClick","curButtons","portionSize","TextInput","textHeader","initialValues","text","name","onSubmit","values","setSubmitting","submit","validate","errors","trim","handleChange","handleSubmit","touched","isSubmitting","nameError","textError","TooltipFunc","opacity","top","left","state","setState","toggle","TooltipNode","ReactDOM","findDOMNode","offsetTop","offsetLeft","zIndex","display","onMouseEnter","onMouseOut","children","role","Main","Link","color","fontSize","href","Math","ceil","feedbacks","reverse","doFeedback","Feedback","date","getFeedbacks","main","map","f","compose","connect"],"mappings":"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","file":"static/js/8.944961c5.chunk.js","sourcesContent":["class Node{\r\n    constructor(value,behavior=0){\r\n        this.value=value\r\n        this.behavior=behavior\r\n        this.childs=[]\r\n    }\r\n}\r\nclass Trie{\r\n    constructor(){\r\n        this.root=new Node(\"\")\r\n    }\r\n    \r\n    AddNode(curNode,value,behavior=0){\r\n        if(curNode.childs.length===0){\r\n            curNode.childs.push(new Node(value,behavior))\r\n            return \"AddSuccessfull\"\r\n        }\r\n        \r\n        //CheckOnCopy\r\n        let check=1\r\n        for(let key in curNode.childs){\r\n            if(curNode.childs[key].value===value){\r\n                check=0\r\n            }\r\n        }\r\n        \r\n        //CheckSuccessfull\r\n        if(check===1){\r\n            curNode.childs.push(new Node(value,behavior))\r\n        }\r\n    }\r\n    AddWord(curNode,word){\r\n        if (word.length===1){\r\n            this.AddNode(curNode,word,1)\r\n            return \"Add Successfull\"\r\n        }\r\n        \r\n        this.AddNode(curNode,word[0])\r\n        \r\n        for (let key in curNode.childs){\r\n            if(curNode.childs[key].value===word[0]){\r\n                this.AddWord(curNode.childs[key],word.slice(1))\r\n            }\r\n        }\r\n    }\r\n    RemoveWord(curNode,word){\r\n      if (word.length===0){\r\n            console.log(curNode)\r\n            curNode.behavior=0\r\n            return \"Remove Successfull\"\r\n        }\r\n        \r\n        for (let key in curNode.childs){\r\n            if(curNode.childs[key].value===word[0]){\r\n                this.RemoveWord(curNode.childs[key],word.slice(1))\r\n            }\r\n        }  \r\n    }\r\n    \r\n    Search(curNode,word){\r\n        for(let key in curNode.childs){\r\n            if(curNode.childs[key].value===word[0]){\r\n                if(curNode.childs[key].behavior===1){\r\n                    return true\r\n                }\r\n                else{\r\n                    return (this.Search(curNode.childs[key],word.slice(1)))\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n    \r\n    Support(curNode,word){\r\n        if (curNode.behavior==1){\r\n            console.log(\"Did you mean: \"+word)\r\n            return word\r\n        }\r\n        for(let key in curNode.childs){\r\n            let neWord=word+curNode.childs[key].value\r\n            return this.Support(curNode.childs[key],neWord)\r\n        }\r\n        return false\r\n    }\r\n    Mean(curNode,word,orig=word){\r\n        if ((word.length===1) && (curNode.behavior===1)){\r\n            console.log(\"Did you Mean:\"+orig)\r\n            return true\r\n        }\r\n        if (word.length===0){\r\n            return this.Support(curNode,orig)\r\n        }\r\n        \r\n        for(let key in curNode.childs){\r\n            if(word[0]===curNode.childs[key].value){\r\n                return this.Mean(curNode.childs[key],word.slice(1),orig)\r\n            }\r\n        }\r\n        return false\r\n    }\r\n}\r\n\r\nexport default Trie\r\n","import { useState } from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport Trie from \"./Trie\"\r\n\r\nlet Debounce = () => {\r\n\r\n    let trie = new Trie()\r\n    trie.AddWord(trie.root, \"pollution\")\r\n    trie.AddWord(trie.root, \"weather\")\r\n    trie.AddWord(trie.root, \"coordinate\")\r\n    trie.AddWord(trie.root,\"main\")\r\n    trie.AddWord(trie.root,\"news\")\r\n\r\n    let [term, setTerm] = useState(\"\")\r\n    let [result,setResult] = useState()\r\n\r\n    let debounce = (e) => {\r\n        let item;\r\n        if(e.target.value){\r\n            item=trie.Mean(trie.root,e.target.value.toLowerCase())\r\n        }\r\n        if(item){\r\n            setResult(item[0].toUpperCase()+item.slice(1))    \r\n        }else if(!e.target.value){setResult(\"\")}\r\n        else{setResult(\"No such as theme\")}\r\n        setTerm(e.target.value)\r\n    }\r\n\r\n\r\n    return <div className=\"mt-4 mb-1\">\r\n        <div className=\"mb-1\">\r\n            <input type=\"search\" placeholder=\"Search\"\r\n                className=\"w-100 mainInput\" value={term} onChange={debounce}\r\n                />\r\n        </div>\r\n        {result &&\r\n        <div>\r\n            <ul className=\"list-group\">\r\n                <NavLink style={{textDecoration:\"none\"}} to={result}>\r\n                <li className=\"list-group-item bounce\">{result}</li>\r\n                </NavLink>\r\n            </ul>\r\n        </div>}\r\n    </div>\r\n}\r\n\r\nexport default Debounce\r\n\r\n","import React from \"react\"\r\nimport Debounce from \"./Debounce\"\r\n\r\ntype PropsType = {\r\n    mainTheme: string,\r\n    description: string\r\n}\r\n\r\nlet Header: React.FC<PropsType> = (props) => {\r\n    let indent = [] as Array<any>\r\n    for (let i = 0; i < 10; i++) {\r\n        indent.push(<br />)\r\n    }\r\n    return <div className={props.mainTheme + \" container-fluid Header\"}>\r\n        <div className=\"d-flex\">\r\n            <div className=\"\">\r\n                <img className=\"img\"\r\n                    style={{ height: 100, width: 100, borderRadius: 2000 }} src=\"http://китсызрань.рф/wp-content/uploads/2016/12/1-1.jpg\" />\r\n            </div>\r\n            <div className=\"text-light\">\r\n                <h1>{props.mainTheme}</h1>\r\n                <div className=\"ml-2\">{props.description}</div>\r\n            </div>\r\n        </div>\r\n        <div></div>\r\n        <div>\r\n            <Debounce />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Header","import Header from \"../UI/Header/Header\"\r\n\r\n\r\nlet withHeader=(Component)=>{\r\n    return(props)=>{\r\n        return<div>\r\n            <Header mainTheme={props.mainTheme} description={props.description}/>\r\n            <Component {...props} />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withHeader","import { count } from \"console\"\r\nimport { useState } from \"react\"\r\n\r\ntype PropsType = {\r\n    changePage: (page: number) => void\r\n    page: number\r\n    countButtons: number\r\n    portionSize:number\r\n}\r\n\r\nlet Pagination: React.FC<PropsType> = (props) => {\r\n    let [portionNumber,setPortionNumber]=useState(1)\r\n    let changePage = (e: any) => {\r\n        props.changePage(e.target.id)\r\n    }\r\n    let buttons: Array<any> = []\r\n    for (let i = 1; i <= props.countButtons; i++) {\r\n        let e = null\r\n        if (props.page == i) {\r\n            e = <button id={`${i}`} className=\"btn btn-light\"\r\n                onClick={changePage}>\r\n                {i}\r\n            </button>\r\n        } else {\r\n            e = <button id={`${i}`} className=\"btn btn-primary\"\r\n                onClick={changePage}>\r\n                {i}\r\n            </button>\r\n        }\r\n        buttons.push(e)\r\n    }\r\n\r\n    let curButtons=([...buttons].slice\r\n    ((portionNumber-1)*props.portionSize,portionNumber*props.portionSize))\r\n\r\n    let onNext=()=>{\r\n        setPortionNumber(portionNumber+1)\r\n    }\r\n    let onPrev=()=>{\r\n        setPortionNumber(portionNumber-1)\r\n    }\r\n    \r\n    return <div>\r\n        <div className=\"right\">\r\n            {portionNumber>1 && \r\n            <button onClick={onPrev} className=\"btn btn-outline-primary\">\r\n                Prev\r\n            </button>}\r\n            {curButtons}\r\n            {portionNumber*props.portionSize<props.countButtons \r\n            &&\r\n            <button onClick={onNext} className=\"btn btn-outline-primary\">\r\n                Next\r\n            </button>\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Pagination","import { error } from \"console\"\r\nimport { Formik } from \"formik\"\r\n\r\ntype PropsType = {\r\n    textHeader: string\r\n    submit: (text: string, name: string) => void\r\n}\r\n\r\nlet TextInput: React.FC<PropsType> = (props) => {\r\n    return <div className=\"card\">\r\n        <div className=\"card-header\">{props.textHeader}</div>\r\n        <div className=\"card-body\">\r\n            <Formik\r\n                initialValues={{ text: \"\", name: \"\" }}\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    props.submit(values.text, values.name)\r\n                    setSubmitting(true)\r\n                }}\r\n                validate={(values) => {\r\n                    const errors = { text: \"\", name: \"\" }\r\n                    if (values.name.trim().length === 0) {\r\n                        errors.name = \"Name is required\"\r\n                        return errors\r\n                    }\r\n                    if (values.text.trim().length === 0) {\r\n                        errors.text = \"text is required\"\r\n                        return errors\r\n                    }\r\n                    return {}\r\n                }}>\r\n                {({\r\n                    handleChange,\r\n                    handleSubmit,\r\n                    values, touched,\r\n                    errors,isSubmitting\r\n                }) => {\r\n                    let nameError = errors.name && touched.name\r\n                    let textError = errors.text && touched.text\r\n                    return <form onSubmit={handleSubmit}>\r\n                        <div>\r\n                            <input value={values.name} onChange={handleChange}\r\n                                name=\"name\" placeholder={nameError \r\n                                ? errors.name : \"Write here your name\"}\r\n                                className={nameError ? \"form-control is-invalid\" :\r\n                                \"form-control\"} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <textarea name=\"text\" className={textError\r\n                                ? \"form-control is-invalid\" : \"form-control\"}\r\n                                onChange={handleChange} value={values.text}\r\n                                placeholder={textError ?\r\n                                    errors.text : \"Write here your feedback\"} />\r\n                        </div>\r\n                        {isSubmitting ? \r\n                        <div className=\"text-primary center\">\r\n                            <h3>Thanks for feedback</h3>\r\n                        </div> :\r\n                        <div className=\"w-100\">\r\n                            <button type={\"submit\"} className=\"btn btn-outline-primary w-100\">\r\n                                leave feedback\r\n                            </button>\r\n                        </div>}\r\n                    </form>\r\n                }}\r\n            </Formik>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default TextInput","import ReactDOM from \"react-dom\"\r\nimport React, { useState } from \"react\"\r\n\r\ntype PropsType={\r\n    text:string\r\n}\r\n\r\nlet TooltipFunc:React.FC<PropsType> = (props) => {\r\n\r\n    let [state, setState] = useState({\r\n        opacity: false,\r\n        top: 0,\r\n        left: 0\r\n    })\r\n\r\n    let toggle = (e:any) => {\r\n        const TooltipNode:any = ReactDOM.findDOMNode(e.target)\r\n        setState({\r\n            opacity: !state.opacity,\r\n            top: TooltipNode.offsetTop+30,\r\n            left: TooltipNode.offsetLeft\r\n        })\r\n    }\r\n    const style = {\r\n        opacity: +state.opacity,\r\n        top: state.top,\r\n        left: state.left,\r\n        zIndex: state.opacity ? 1000 : -1000\r\n    }\r\n    return <div style={{ display: \"inline\" }}>\r\n        <span onMouseEnter={toggle} onMouseOut={toggle}>\r\n            {props.children}\r\n        </span>\r\n        <div style={style} className=\"tooltip bottom mt-1\" role={\"tooltip\"}>\r\n            <div className=\"tooltip-arrow\"></div>\r\n            <div className=\"tooltip-inner\">\r\n                {props.text}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default TooltipFunc\r\n\r\n","import React from \"react\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport {FeedbackType} from \"../../../Redux/Reducers/reduceMain\"\r\nimport TextInput from \"../../Bricks/TextInput\"\r\nimport Pagination from \"../../Bricks/Pagination\"\r\nimport Tooltip from \"../../Bricks/ToolTip\"\r\n \r\ntype PropsType = {\r\n    mainTheme: string\r\n    description: string\r\n    feedbacks:Array<any>//Array with jsx\r\n    page:number\r\n    portionSize:number\r\n    changePage:(page:number)=>void\r\n    doFeedback:(text:string,name:string)=>void\r\n}\r\n\r\nlet Main: React.FC<PropsType> = (props) => {\r\n    let Link = { textDecoration: \"none\", color: \"blue\" }\r\n    return <div>\r\n        <div className=\"container Header\">\r\n            <div style={{ fontSize: 30 }}>\r\n                <h1>About project</h1>\r\n                <div className=\"container\">\r\n                    Its project was created for\r\n                    geographical dates\r\n        such as <NavLink style={Link} to=\"Pollution\">\r\n                        Pollution\r\n        </NavLink> , <NavLink style={Link} to=\"Weather\">\r\n                        Weather\r\n        </NavLink> forecast , <NavLink style={Link} to=\"Coordinater\">\r\n                        Coordinate\r\n        </NavLink> - and all its arround while the world.\r\n        </div>\r\n            </div>\r\n            <div style={{ fontSize: 30 }}>\r\n                <h1>API</h1>\r\n                <div className=\"container\">\r\n                    All dates was geting\r\n               from API - <a href=\"https://openweathermap.org/\" style={Link}>\r\n                        <Tooltip text={\"Weather API\"}>OpenWeather</Tooltip>\r\n                </a> - Thanks a lot them.\r\n            </div>\r\n            </div>\r\n            <div>\r\n                <h1>And other information</h1>\r\n                <div className=\"container\" style={{ fontSize: 30 }}>\r\n                    Maket this project\r\n                    and idea was\r\n                taken from site - <a href=\"https://www.noaa.gov/\" style={Link}>\r\n                        <Tooltip text={\"Company of Explorers\"}>NOAA</Tooltip>\r\n                </a> - Thanks a lot them.\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\">\r\n            <h1>Feedbacks\r\n                <div style={{fontSize:28}} className=\"right\">\r\n                    <Pagination countButtons={Math.ceil(props.feedbacks.length/props.portionSize)}\r\n                    portionSize={props.portionSize}  \r\n                    page={props.page} changePage={props.changePage}/>\r\n                </div>\r\n            </h1>\r\n            <div className=\"container\">\r\n                {[...[...props.feedbacks].reverse()].slice\r\n                ((props.page-1)*props.portionSize,props.page*props.portionSize)}\r\n                <div className=\"mt-2\">\r\n                    <TextInput textHeader={\"Leave feedback\"}\r\n                    submit={props.doFeedback} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Main","import React from \"react\"\r\ntype PropsType={\r\n    text:string\r\n    name:string\r\n    date:string\r\n}\r\n\r\nlet Feedback:React.FC<PropsType>=(props)=>{\r\n    return<div className=\"card mt-2\">\r\n        <div className=\"card-header\">\r\n            {props.name}\r\n            <div className=\"right\">\r\n                {props.date}\r\n            </div>\r\n        </div>\r\n        <div className=\"card-body card-container\">\r\n            {props.text}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Feedback","import {AppStateType} from \"../Redux\"\r\nimport Feedback from \"../../UI/Article/Main/Feedback\"\r\n\r\nexport let getFeedbacks=(state:AppStateType)=>{\r\n    return state.main.feedbacks.map(f=>\r\n    <Feedback name={f.name} text={f.text} date={f.date}  />)\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport withHeader from \"../../../HOC/withHeader\"\r\nimport {AppStateType} from \"../../../Redux/Redux\"\r\nimport Main from \"./Main\"\r\nimport {doFeedback, changePage,FeedbackType} from \"../../../Redux/Reducers/reduceMain\"\r\nimport {getFeedbacks} from \"../../../Redux/Selectors/mainSelector\"\r\n\r\ntype MSTPType={\r\n    mainTheme:string,\r\n    description:string,\r\n    feedbacks:any//array with jsx\r\n    page:number\r\n    portionSize:number\r\n}\r\nlet MapStateToProps=(state:AppStateType):MSTPType=>{\r\n    return{\r\n        mainTheme:state.main.mainTheme,\r\n        description:state.main.description,\r\n        feedbacks:getFeedbacks(state),\r\n        page:state.main.page,\r\n        portionSize:state.main.portionSize\r\n    }\r\n}\r\ntype MDTPType={\r\n    doFeedback:(text:string,name:string)=>void\r\n    changePage:(page:number)=>void\r\n}\r\ntype OwnPropsType={}\r\n\r\nexport default compose(\r\n    connect<MSTPType,MDTPType,OwnPropsType,AppStateType>\r\n    (MapStateToProps,{doFeedback,changePage}),\r\n    withHeader\r\n)(Main)"],"sourceRoot":""}